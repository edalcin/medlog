name: Publish Docker Image

on:
  push:
    branches:
      - main
    tags:
      - 'v*'
  pull_request:
    branches:
      - main
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: edalcin/medlog

jobs:
  quality:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@v5
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
      - name: Install
        run: npm ci
      - name: Lint
        run: npm run lint --if-present
        continue-on-error: true
      - name: Typecheck
        run: npx tsc --noEmit
        continue-on-error: true
      - name: Placeholder tests
        run: echo "(Adicionar testes futuramente)"
        continue-on-error: true
  build-and-push:
    runs-on: ubuntu-latest
    needs: quality
    if: always()
    permissions:
      contents: read
      packages: write
      id-token: write
      attestations: write
    steps:
      - uses: actions/checkout@v5
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Log in to Container Registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=raw,value=latest,enable={{is_default_branch}}
            type=sha
            type=raw,value=unraid-test,enable=true
      - name: Build and push Docker image
        id: build
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
      - name: Generate artifact attestation
        if: github.event_name != 'pull_request'
        uses: actions/attest-build-provenance@v1
        with:
          subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          subject-digest: ${{ steps.build.outputs.digest }}
          push-to-registry: true
      - name: Generate CHANGELOG fragment (tag only)
        if: startsWith(github.ref, 'refs/tags/v')
        run: |
          echo "# Release $GITHUB_REF_NAME" > RELEASE_NOTES.md
          echo >> RELEASE_NOTES.md
          echo "Imagem: ghcr.io/${{ env.IMAGE_NAME }}:$GITHUB_REF_NAME" >> RELEASE_NOTES.md
          echo >> RELEASE_NOTES.md
          echo "Commit: $GITHUB_SHA" >> RELEASE_NOTES.md
          echo >> RELEASE_NOTES.md
          echo "(Gerar changelog detalhado quando houver conventional commits)" >> RELEASE_NOTES.md
      - name: Create GitHub Release
        if: startsWith(github.ref, 'refs/tags/v')
        uses: softprops/action-gh-release@v2
        with:
          body_path: RELEASE_NOTES.md
          draft: false
          prerelease: false
